const SCALE=1.6,WIDTH=1280*SCALE,HEIGHT=720*SCALE;let clientWidth=document.documentElement.clientWidth,clientHeight=document.documentElement.clientHeight;class Game extends Phaser.Scene{static cameras;music;constructor(){super({key:"game"})}init(){}loading_screen(){var progressBar=this.add.graphics(),progressBox=this.add.graphics(),width=this.cameras.main.width,height=this.cameras.main.height;progressBox.fillStyle(2236962,.8),progressBox.fillRect(width/2-160,height/2-25,320,50);var loadingText=this.make.text({x:width/2,y:height/2-50,text:"Loading...",style:{font:"20px monospace",fill:"#ffffff"}});loadingText.setOrigin(.5,.5);var percentText=this.make.text({x:width/2,y:height/2,text:"0%",style:{font:"18px monospace",fill:"#ffffff"}});percentText.setOrigin(.5,.5);var assetText=this.make.text({x:width/2,y:height/2+50,text:"",style:{font:"18px monospace",fill:"#ffffff"}});assetText.setOrigin(.5,.5),this.load.on("progress",function(value){percentText.setText(parseInt(100*value)+"%"),progressBar.clear(),progressBar.fillStyle(16777215,1),progressBar.fillRect(width/2-150,height/2-15,300*value,30)}),this.load.on("fileprogress",function(file){assetText.setText("Loading asset: "+file.key)}),this.load.on("complete",function(){progressBar.destroy(),progressBox.destroy(),loadingText.destroy(),percentText.destroy(),assetText.destroy()},this)}preload(){this.input.setDefaultCursor("crosshair"),this.loading_screen(),this.load.image({key:"playerfrag",url:"data/gfx/playerFrag.svg"}),this.load.image({key:"chain",url:"data/gfx/chaingun.png"}),this.load.image({key:"chainicon",url:"data/gfx/chaingunIcon.svg"}),this.load.image({key:"chainAmmo",url:"data/gfx/chainAmmo.png"}),this.load.image({key:"shotgun",url:"data/gfx/shotgun.svg"}),this.load.image({key:"shotgunicon",url:"data/gfx/shotgunIcon.svg"}),this.load.image({key:"shotgunAmmo",url:"data/gfx/shotgunAmmo.svg"}),this.load.image({key:"slingshot",url:"data/gfx/slingshot.svg"}),this.load.image({key:"slingshoticon",url:"data/gfx/slingshotIcon.svg"}),this.load.image({key:"slingAmmo",url:"data/gfx/slingshotAmmo.svg"}),this.load.image({key:"background",url:"data/gfx/Background.svg",normalMap:"data/gfx/NormalThread4.svg"}),this.load.audio("game_music","data/sfx/music.wav"),this.load.audio("shoot_pop","data/sfx/cork_edit.mp3"),this.load.audio("shoot_twang","data/sfx/shoot.mp3"),this.load.audio("shoot_bang","data/sfx/thwack-01.wav"),this.load.audio("pickup_item","data/sfx/pickup.wav"),this.load.audio("death1","data/sfx/blub_hurt1.wav"),this.load.audio("death2","data/sfx/blub_hurt2.wav"),this.load.text("CovidRed","data/fx/CovidRed.frag"),this.load.text("CovidGreen","data/fx/CovidGreen.frag"),this.load.text("CovidBlue","data/fx/CovidBlue.frag"),this.load.text("CovidVert","data/fx/Covid.vert"),this.sys.game.device.os.desktop||this.load.plugin("rexvirtualjoystickplugin","site/rexvirtualjoystickplugin.min.js",!0)}create(data){this.add.shader(new Phaser.Display.BaseShader("---",this.cache.text.get("CovidGreen"),this.cache.text.get("CovidVert")),0,0,300,300,[]).setRenderToTexture("virus_green"),this.add.shader(new Phaser.Display.BaseShader("----",this.cache.text.get("CovidRed"),this.cache.text.get("CovidVert")),0,0,500,500,[]).setRenderToTexture("virus_red"),this.add.shader(new Phaser.Display.BaseShader("------",this.cache.text.get("CovidBlue"),this.cache.text.get("CovidVert")),0,0,200,200,[]).setRenderToTexture("virus_blue"),this.physics.world.setBounds(0,0,2*WIDTH,2*HEIGHT),this.cameras.main.setBounds(0,0,2*WIDTH,2*HEIGHT),this.add.image(0,0,"background").setPipeline("Light2D").setOrigin(0,0).setDisplaySize(2*WIDTH,2*HEIGHT),this.lights.enable().setAmbientColor(5592405);var heart_light=this.lights.addLight(1689,1015,100,16724787);this.hlt=this.tweens.add({targets:heart_light,radius:500,duration:1e3,ease:"Sine.InOut",repeat:-1,yoyo:!0}),this.events.on("nextEvent",function(value){this.hlt.timeScale*=1.5,this.music.rate+=.07},this),EntityMan.Init(this),ItemMan.Init(this),BulletMan.Init(this),this.music=this.sound.add("game_music",{loop:!0,volume:.2,rate:.5}),this.music.play(),this.input.setDefaultCursor("crosshair"),this.cameras.main.once(Phaser.Cameras.Scene2D.Events.FADE_OUT_COMPLETE,(cam,effect)=>{this.time.delayedCall(1e3,()=>{this.scene.start("gameover",{fadeIn:!0,score:EntityMan.player.score,win:!1})},this)},this),this.events.once("gamewin",()=>{EntityMan.enemies.children.each(child=>{switch(child.type){case Enemies.BLUE:case Enemies.GREEN:EntityMan.scene.sound.play("death1");break;case Enemies.RED:EntityMan.scene.sound.play("death2")}child.destroy()}),this.events.emit("livesChange",0);this.tweens.add({targets:this.music,volume:0,duration:2e3,onComplete:()=>{this.scene.launch("gameover",{fadeIn:!0,score:EntityMan.player.score,lives:EntityMan.player.lives,win:!0}),this.scene.bringToTop("gameover")}})},this),this.scene.launch("ui")}update(time,delta){this.cameras.main.startFollow(EntityMan.player);let pointer=this.input.mousePointer;var wp=this.cameras.main.getWorldPoint(pointer.x,pointer.y);pointer.worldX=wp.x,pointer.worldY=wp.y,EntityMan.Update(time,delta),BulletMan.Update(time,delta)}}class GameOver extends Phaser.Scene{constructor(){super({key:"gameover"})}preload(){this.load.image({key:"gameoverTxt",url:"data/gfx/gameover.png"}),this.load.image({key:"playagainbtn",url:"data/gfx/PlayAgainButton.svg"}),this.load.image({key:"mainmenubtn",url:"data/gfx/MainMenuButton.svg"}),this.load.image({key:"victory",url:"data/gfx/victory4.png"}),this.load.audio("fanfare","data/sfx/tempWinSong.mp3")}create(data){var w=this.sys.canvas.width,h=this.sys.canvas.height,logo_id=data.win?"victory":"gameoverTxt";this.logo=this.add.image(w/2,h/6,logo_id).setOrigin(.5,.5).setScale(.8),this.mm=this.add.ImgButton(w/2,h/1.8,"mainmenubtn",()=>this.mainMenu(data.win)).setOrigin(.5,.5),this.rs=this.add.ImgButton(w/2,h/1.5,"playagainbtn",()=>this.playAgain(data.win)).setOrigin(.5,.5),data.win?(this.scoreTxt=this.add.text(w/2,h/3,"Final Score: "+data.score+" x "+data.lives+" lives = "+data.score*data.lives,{fill:"#0f0"}).setFontSize(60).setOrigin(.5,.5),this.music=this.sound.add("fanfare",{loop:!0}),this.music.play()):this.scoreTxt=this.add.text(w/2,h/3,"Final Score: "+data.score,{fill:"#0f0"}).setFontSize(60).setOrigin(.5,.5)}playAgain(win){win&&this.music.stop(),this.scene.remove("game"),this.scene.add("game",Game,!1),this.scene.remove("ui"),this.scene.add("ui",UserInterface,!1),this.scene.start("game",{fadeIn:!0})}mainMenu(win){win&&this.music.stop(),this.scene.remove("game"),this.scene.add("game",Game,!1),this.scene.remove("ui"),this.scene.add("ui",UserInterface,!1),this.scene.start("default",{fadeIn:!0})}}class EntityMan{static player;static enemies;static scene;static nextScoreEvent;static prevEnemyCount;static timer;static score2win=95e3;static Init(scene){EntityMan.scene=scene,EntityMan.player=scene.add.player(scene.physics.world.bounds.centerX,scene.physics.world.bounds.centerY,40).setOrigin(.5,.5),EntityMan.enemies=scene.add.group({classType:Enemy,runChildUpdate:!0,removeCallback:function(enemy){TossCoin(.5)&&ItemMan.addItem(Item.RandomItem(),enemy.getCenter())}}),EntityMan.items=scene.add.group({classType:Item,runChildUpdate:!0});for(let i=0;i<5;++i)EntityMan.SpawnEnemy(Enemies.GREEN);EntityMan.SpawnEnemy(Enemies.RED),EntityMan.SpawnEnemy(Enemies.BLUE),EntityMan.SpawnEnemy(Enemies.BLUE),scene.physics.add.overlap(EntityMan.enemies,EntityMan.player,Player.DoDamage),EntityMan.nextScoreEvent=1e3,EntityMan.prevEnemyCount=EntityMan.enemies.countActive(),EntityMan.timer=0}static Update(time,dt){for(EntityMan.player.update(time,dt),EntityMan.timer+=dt;1e4<EntityMan.timer;)EntityMan.SpawnEnemy(Enemies.GREEN),this.timer-=1e4;if(EntityMan.player.score>EntityMan.nextScoreEvent||EntityMan.enemies.countActive()>=3*EntityMan.prevEnemyCount){switch(EntityMan.scene.events.emit("nextEvent"),EntityMan.nextEvent){case 1e3:for(let i=0;i<5;++i)EntityMan.SpawnEnemy(Enemies.GREEN);break;case 2e3:case 4e3:for(let i=0;i<3;++i)EntityMan.SpawnEnemy(Enemies.GREEN);EntityMan.SpawnEnemy(Enemies.BLUE);break;case 8e3:EntityMan.SpawnEnemy(Enemies.BLUE),EntityMan.SpawnEnemy(Enemies.BLUE),EntityMan.SpawnEnemy(Enemies.RED);break;case 16e3:for(let i=0;i<5;++i)EntityMan.SpawnEnemy(Enemies.GREEN),EntityMan.SpawnEnemy(Enemies.BLUE),EntityMan.SpawnEnemy(Enemies.RED);break;default:for(let i=0;i<5;++i)EntityMan.SpawnEnemy(Enemies.GREEN),EntityMan.SpawnEnemy(Enemies.BLUE);EntityMan.SpawnEnemy(Enemies.RED),EntityMan.SpawnEnemy(Enemies.RED)}EntityMan.nextScoreEvent*=2,EntityMan.prevEnemyCount=EntityMan.enemies.countActive()}EntityMan.player.score>=EntityMan.score2win&&(EntityMan.scene.events.emit("gamewin"),EntityMan.timer=0)}static SpawnEnemy(type){var spawnloc=Enemy.SpawnLoc(EntityMan.scene);let e;switch(type){case Enemies.GREEN:e=EntityMan.enemies.get(spawnloc.x,spawnloc.y,type);break;case Enemies.RED:e=EntityMan.enemies.get(spawnloc.x,spawnloc.y,type),e.hp=2;break;case Enemies.BLUE:e=EntityMan.enemies.get(spawnloc.x,spawnloc.y,type),e.hp=3}e.type=type,e.setTarget(this.player),e.setPipeline("Light2D")}}const Enemies=Object.freeze({GREEN:"virus_green",RED:"virus_red",BLUE:"virus_blue"});class Enemy extends Phaser.GameObjects.Sprite{hp;type;v=70;timer=0;constructor(scene,x,y,texture){super(scene,x,y,texture),scene.physics.world.enable(this),this.body.setCircle(this.displayWidth/2),scene.add.existing(this),this.setScale(.25),this.angle=0,this.setDepth(.2)}setTarget(target){this.target=target}updateRotation(){var c=this.getCenter(),rotation=this.target.getCenter(),rotation=Phaser.Math.Angle.Between(c.x,c.y,rotation.x,rotation.y);this.target.alive()?this.setRotation(rotation):this.setRotation(Phaser.Math.Angle.Reverse(rotation))}update(t,dt){switch(this.type){case Enemies.BLUE:case Enemies.GREEN:this.updateRotation(),this.scene.physics.velocityFromRotation(this.rotation,this.v,this.body.velocity);break;case Enemies.RED:var x,y,x1,y1;2==this.hp?(this.updateRotation(),this.scene.physics.velocityFromRotation(this.rotation,this.v,this.body.velocity)):Math.floor(Math.abs(this.body.velocity.x))-5<0?(this.hp=1e12,this.timer<834?(this.target.alive()&&(this.timer+=dt),this.body.acceleration.x=0,this.body.acceleration.y=0,this.body.velocity.x=0,this.body.velocity.y=0,y1=this.getCenter(),x=this.target.getCenter(),y=Phaser.Math.Angle.Between(y1.x,y1.y,x.x,x.y),this.setRotation(y)):(this.timer=0,this.hp=1,this.scene.physics.velocityFromRotation(this.rotation,this.v,this.body.velocity))):(x1=Math.sign(Math.cos(this.rotation)),y1=Math.sign(Math.sin(this.rotation)),x=0<x1?this.body.width:0,y=0<y1?this.body.height:0,x1=x1<0?this.body.width:0,y1=y1<0?this.body.height:0,this.scene.cameras.main.worldView.contains(this.body.x+x1,this.body.y+y1)&&(this.scene.cameras.main.worldView.contains(this.body.x+x,this.body.y+y)||this.body.setVelocity(0)))}}static SpawnLoc(bound_y){var bound_x=bound_y.physics.world.bounds.width,bound_y=bound_y.physics.world.bounds.height;let r={};return TossCoin(.5)?TossCoin(.5)?(r=GetRandomVec2(0,bound_x,0,0),r.y+=-400):(r=GetRandomVec2(0,bound_x,bound_y,bound_y),r.y+=400):TossCoin(.5)?(r=GetRandomVec2(0,0,0,bound_y),r.x+=-400):(r=GetRandomVec2(bound_x,bound_x,0,bound_y),r.x+=400),r}}Phaser.GameObjects.GameObjectFactory.register("enemy",function(x,y,cc){cc=new Enemy(this.scene,x,y,cc);return this.displayList.add(cc),this.updateList.add(cc),cc});const Bullets={CHAIN:"chainAmmo",SLINGSHOT:"slingAmmo",SHOTGUN:"shotgunAmmo"};class BulletMan{static bullets;static scene;static Init(scene){BulletMan.bullets=scene.add.group({classType:Bullet,runChildUpdate:!0}),scene.physics.add.overlap(BulletMan.bullets,EntityMan.enemies,doDamage),BulletMan.scene=scene}static Update(t,dt){}static addBullet(type,dir,angle){let b=BulletMan.bullets.get(dir.x,dir.y,type);dir={x:Math.cos(angle),y:Math.sin(angle)};switch(b.dir=dir,b.rotation=angle,type){case Bullets.SHOTGUN:case Bullets.SLINGSHOT:case Bullets.CHAIN:b.setScale(.2)}}}function score_fade(x,y,score){let scoreText=EntityMan.scene.add.text(x,y,score).setFontSize(30).setFontFamily("Courier New").setOrigin(.5);BulletMan.scene.tweens.add({targets:scoreText,alpha:0,duration:300,ease:"Power2",onComplete:function(){scoreText.destroy()}})}function doDamage(Bullet,Enemy){switch(Enemy.type){case Enemies.GREEN:Enemy.scene.sound.play("death1"),Bullet.destroy(),Enemy.destroy(),EntityMan.SpawnEnemy(Enemy.type),EntityMan.player.score+=100,EntityMan.scene.events.emit("scoreChange",EntityMan.player.score),score_fade(Enemy.x,Enemy.y,"100");break;case Enemies.RED:--Enemy.hp,Bullet.destroy(),Enemy.hp<=0?(Enemy.scene.sound.play("death2"),Enemy.destroy(),EntityMan.SpawnEnemy(Enemy.type),EntityMan.player.score+=500,EntityMan.scene.events.emit("scoreChange",EntityMan.player.score),score_fade(Enemy.x,Enemy.y,"500")):(Enemy.v=1e3,Enemy.body.velocity.x=0);break;case Enemies.BLUE:--Enemy.hp,Bullet.destroy(),Enemy.hp<=0?(Enemy.scene.sound.play("death1"),Enemy.destroy(),EntityMan.SpawnEnemy(Enemy.type),EntityMan.player.score+=300,EntityMan.scene.events.emit("scoreChange",EntityMan.player.score),score_fade(Enemy.x,Enemy.y,"300")):BulletMan.scene.tweens.add({targets:Enemy,scale:1.5*Enemy.scaleX,ease:"Linear",duration:500})}}class Bullet extends Phaser.GameObjects.Sprite{#size1;#type;dir;constructor(scene,x,y,texture){super(scene,x,y,texture),scene.physics.world.enable(this),this.body.setCollideWorldBounds(!1),scene.add.existing(this),this.setDepth(.2)}update(t,dt){this.body.velocity.x=700*this.dir.x,this.body.velocity.y=700*this.dir.y,this.body.checkWorldBounds()&&this.destroy()}}const Items={CHAIN:"chain",SHOTGUN:"shotgun",SLINGSHOT:"slingshot"},ItemIcons={CHAIN:"chainicon",SHOTGUN:"shotgunicon",SLINGSHOT:"slingshoticon"},ItemSound={CHAIN:"shoot_pop",SHOTGUN:"shoot_bang",SLINGSHOT:"shoot_twang"};class ItemMan{static items;static scene;static Init(scene){ItemMan.scene=scene,ItemMan.items=scene.add.group({classType:Item,maxSize:4,runChildUpdate:!0,removeCallback:function(item){ItemMan.scene.lights.removeLight(item.glow)}}),scene.physics.add.overlap(ItemMan.items,EntityMan.player,getItem)}static Update(){}static addItem(type,loc){let i=ItemMan.items.get(loc.x,loc.y,type);i&&(i.setPipeline("Light2D"),i.glow=ItemMan.scene.lights.addLight(i.x,i.y,200,16724787))}}function getItem(Item,Player){switch(Item.type){case ItemIcons.CHAIN:Player.SetWeapon(Items.CHAIN,200);break;case ItemIcons.SLINGSHOT:Player.SetWeapon(Items.SLINGSHOT,-1);break;case ItemIcons.SHOTGUN:Player.SetWeapon(Items.SHOTGUN,15)}Item.destroy()}class Item extends Phaser.GameObjects.Sprite{glow;type;constructor(scene,x,y,texture){switch(super(scene,x,y,texture),texture){case ItemIcons.CHAIN:this.setDepth(.1),this.setScale(.6),this.type=ItemIcons.CHAIN,scene.physics.world.enable(this);break;case Items.CHAIN:this.type=Items.CHAIN,this.setScale(.6);break;case Items.SLINGSHOT:this.setScale(.6),this.type=Items.SLINGSHOT;break;case ItemIcons.SLINGSHOT:this.setDepth(.1),this.setScale(.6),this.type=ItemIcons.SLINGSHOT,scene.physics.world.enable(this);break;case Items.SHOTGUN:this.setScale(1.5),this.type=Items.SHOTGUN;break;case ItemIcons.SHOTGUN:this.setDepth(.1),this.setScale(.6),this.type=ItemIcons.SHOTGUN,scene.physics.world.enable(this)}scene.add.existing(this),this.setDepth(.2)}update(){}static RandomItem(){return TossCoin(.3)?ItemIcons.CHAIN:ItemIcons.SHOTGUN}}function TossCoin(prob){return Math.random()<prob}function getRandom(min,max){return Math.random()*(max-min)+min}function GetRandomVec2(xMin,xMax,yMin,yMax){return{x:getRandom(xMin,xMax),y:getRandom(yMin,yMax)}}Phaser.GameObjects.GameObjectFactory.register("item",function(x,y,cc){cc=new Item(this.scene,x,y,cc);return this.displayList.add(cc),this.updateList.add(cc),cc});class Player extends Phaser.GameObjects.Sprite{a1;a2;weapon;ammo;shoot;keys;radius;lives;light;particles;score;cooldown;constructor(scene,x,y,r){let circBody=scene.make.graphics().fillStyle(6711039).fillCircle(r,r,r).generateTexture("PlayerBody",2*r,2*r);circBody.destroy(),super(scene,x,y,"PlayerBody");let circArm=scene.make.graphics().fillStyle(8421504).fillCircle(r,r,r/4).strokeCircle(r,r,r/4).generateTexture("arm",2*r,2*r);circArm.destroy(),this.setDepth(.05),this.a1=scene.add.sprite(x+r,y,"arm").setDepth(.1),this.a2=scene.add.sprite(x,y+r,"arm").setDepth(.1),scene.physics.world.enable(this),this.body.setCollideWorldBounds(!0),scene.add.existing(this),this.body.setCircle(r),scene.sys.game.device.os.desktop||(scene.input.addPointer(2),this.j1=scene.plugins.get("rexvirtualjoystickplugin").add(scene,{x:150,y:scene.cameras.main.displayHeight-150,radius:100}),this.cursorKeys=this.j1.createCursorKeys(),this.pressedKeys=[]),scene.input.keyboard.on("keyup",this.keyup,this),scene.input.on("pointerdown",this.mousedown,this),scene.input.on("pointerup",this.mouseup,this),this.keys=scene.input.keyboard.addKeys({W:Phaser.Input.Keyboard.KeyCodes.W,A:Phaser.Input.Keyboard.KeyCodes.A,S:Phaser.Input.Keyboard.KeyCodes.S,D:Phaser.Input.Keyboard.KeyCodes.D,UP:Phaser.Input.Keyboard.KeyCodes.UP,DOWN:Phaser.Input.Keyboard.KeyCodes.DOWN,LEFT:Phaser.Input.Keyboard.KeyCodes.LEFT,RIGHT:Phaser.Input.Keyboard.KeyCodes.RIGHT}),this.particles=scene.add.particles("playerfrag"),this.particles.createEmitter({angle:{min:240,max:300},speed:{min:400,max:600},quantity:{min:2,max:10},lifespan:4e3,alpha:{start:1,end:0},scale:{min:.05,max:.4},rotate:{start:0,end:360,ease:"Back.easeOut"},gravityY:800,on:!1}),this.weapon=scene.add.item(x,y,Items.SLINGSHOT),this.light=this.scene.lights.addLight(0,0,150),this.angle=0,this.radius=r,this.body.setMaxVelocity(200,200),this.shoot=!1,this.ammo=0,this.score=0,this.cooldown=0,this.lives=4}preUpdate(time,deltaTime){super.preUpdate(time,deltaTime),this.keydown()}update(time,dt){var pc=this.body.center;this.scene.sys.game.device.os.desktop?this.angle=Phaser.Math.Angle.Between(pc.x,pc.y,this.scene.input.mousePointer.worldX,this.scene.input.mousePointer.worldY):(offset=this.j1.pointerX==this.scene.input.pointer1.worldX?this.scene.input.pointer2:this.scene.input.pointer1,this.angle=Phaser.Math.Angle.Between(pc.x,pc.y,offset.worldX,offset.worldY));var is_dir=Math.abs(this.angle)<1.5708;if(this.shoot){let outPos=this.weapon.getRightCenter();var offset=new Phaser.Geom.Point(20,7*(is_dir?-1:1));switch(Phaser.Math.Rotate(offset,this.weapon.rotation),outPos.y+=offset.y,outPos.x+=offset.x,this.weapon.type){case Items.CHAIN:this.scene.cameras.main.shake(500),this.body.x-=2*Math.cos(this.angle),this.body.y-=2*Math.sin(this.angle),this.scene.sound.play(ItemSound.CHAIN),BulletMan.addBullet(Bullets.CHAIN,outPos,this.angle),--this.ammo,this.scene.events.emit("ammoChange",this.ammo),this.ammo<=0&&this.SetWeapon(Items.SLINGSHOT,this.ammo);break;case Items.SLINGSHOT:this.scene.sound.play(ItemSound.SLINGSHOT),BulletMan.addBullet(Bullets.SLINGSHOT,outPos,this.angle),this.shoot=!1;break;case Items.SHOTGUN:if(0<this.cooldown){this.cooldown-=dt;break}this.cooldown=83,this.scene.sound.play(ItemSound.SHOTGUN);var dir1=Math.sign(this.angle);BulletMan.addBullet(Bullets.SHOTGUN,outPos,this.angle+.1*dir1),BulletMan.addBullet(Bullets.SHOTGUN,outPos,this.angle+.05*dir1),BulletMan.addBullet(Bullets.SHOTGUN,outPos,this.angle),BulletMan.addBullet(Bullets.SHOTGUN,outPos,this.angle+-.05*dir1),this.shoot=!1,--this.ammo,this.scene.events.emit("ammoChange",this.ammo),this.ammo<=0&&this.SetWeapon(Items.SLINGSHOT,this.ammo)}}this.light.setPosition(pc.x,pc.y),Phaser.Math.RotateTo(this.a1,pc.x,pc.y,this.angle-.7854,this.radius),Phaser.Math.RotateTo(this.a2,pc.x,pc.y,this.angle+.7854,this.radius),Phaser.Math.RotateTo(this.weapon,pc.x,pc.y,this.angle,this.radius),this.weapon.rotation=this.angle,this.weapon.setFlipY(!is_dir)}keydown(){let A=this.keys.A.isDown||this.keys.LEFT.isDown,D=this.keys.D.isDown||this.keys.RIGHT.isDown,W=this.keys.W.isDown||this.keys.UP.isDown,S=this.keys.S.isDown||this.keys.DOWN.isDown;this.scene.sys.game.device.os.desktop||(A|=this.cursorKeys.left.isDown,D|=this.cursorKeys.right.isDown,W|=this.cursorKeys.up.isDown,S|=this.cursorKeys.down.isDown,this.pressedKeys[1]!=A&&this.keyup({keyCode:65}),this.pressedKeys[2]!=D&&this.keyup({keyCode:68}),this.pressedKeys[3]!=W&&this.keyup({keyCode:87}),this.pressedKeys[4]!=S&&this.keyup({keyCode:83}),this.pressedKeys[1]=A,this.pressedKeys[2]=D,this.pressedKeys[3]=W,this.pressedKeys[4]=S),A&&!D?this.body.velocity.x-=this.body.maxVelocity.x:D&&!A?this.body.velocity.x+=this.body.maxVelocity.x:A&&D&&(this.body.velocity.x=0),W&&!S?this.body.velocity.y-=this.body.maxVelocity.y:S&&!W?this.body.velocity.y+=this.body.maxVelocity.y:W&&S&&(this.body.velocity.y=0)}keyup(e){switch(e.keyCode){case 65:case 37:this.body.velocity.x=0;break;case 87:case 38:this.body.velocity.y=0;break;case 68:case 39:this.body.velocity.x=0;break;case 83:case 40:this.body.velocity.y=0}}mousedown(e){this.shoot=!0}mouseup(e){this.shoot=!1}SetWeapon(weaponType,ammo){this.scene.sound.play("pickup_item"),weaponType==this.weapon.type?(this.ammo+=ammo,score_fade(this.x+50,this.y-50,"+"+ammo)):(this.weapon.destroy(),this.weapon=this.scene.add.item(this.x,this.y,weaponType),this.ammo=ammo,this.alive()||(this.weapon.alpha=this.alpha)),this.scene.events.emit("ammoChange",this.ammo)}static DoDamage(enemy,player){if(player.alive())if(player.particles.emitParticleAt(player.x,player.y),player.alpha=0,player.a1.alpha=0,player.a2.alpha=0,player.a2.alpha=0,player.weapon.alpha=0,player.shoot=!1,player.body.moves=!1,player.scene.input.off("pointerdown",player.pointerdown,player),--player.lives,player.light.setIntensity(.01),BulletMan.scene.events.emit("livesChange",player.lives),player.lives<=0){let gm=player.scene.sound.get("game_music");player.scene.tweens.add({targets:gm,volume:0,duration:6e3,onComplete:function(){gm.destroy()}}),player.scene.cameras.main.fadeOut(6e3)}else player.scene.tweens.add({targets:[player,player.a1,player.a2,player.weapon],alpha:{start:0,to:1},ease:"Bounce.In",delay:3e3,onComplete:function(){player.body.moves=!0,player.light.setIntensity(1),player.scene.input.on("pointerdown",player.mousedown,player)}})}alive(){return 1==this.alpha}}Phaser.GameObjects.GameObjectFactory.register("player",function(x,y,pl1){pl1=new Player(this.scene,x,y,pl1);return this.displayList.add(pl1),this.updateList.add(pl1),pl1});class ImageButton extends Phaser.GameObjects.Image{constructor(scene,x,y,texture,callback){super(scene,x,y,texture),this.setInteractive({useHandCursor:!0}).on("pointerover",()=>this.enterButtonHoverState()).on("pointerout",()=>this.enterButtonRestState()).on("pointerdown",()=>this.enterButtonActiveState()).on("pointerup",()=>{this.setInteractive({useHandCursor:!1}),this.enterButtonHoverState(),callback()}),scene.add.existing(this)}preUpdate(time,delta){}update(t,dt){}enterButtonHoverState(){this.setTint(1214413)}enterButtonRestState(){this.clearTint()}enterButtonActiveState(){this.setTint(8421504)}}Phaser.GameObjects.GameObjectFactory.register("ImgButton",function(x,y,texture,cc){cc=new ImageButton(this.scene,x,y,texture,cc);return this.displayList.add(cc),this.updateList.add(cc),cc});class UserInterface extends Phaser.Scene{ammoText;scoreText;livesText;constructor(config){super({key:"ui"})}preload(){}create(data){this.scoreText=this.add.text(10,50,"Score: 0",{fontFamily:"Courier New",fontSize:20,fill:"#0f0"}),this.gameText=this.add.text(10,20,"Game Progress: 0%",{fontFamily:"Courier New",fontSize:20,fill:"#0f0"}),this.ammoText=this.add.text(10,80,"Ammo: Unlimited",{fontFamily:"Courier New",fontSize:20,fill:"#0f0"}),this.livesText=this.add.text(10,110,"Lives: 4",{fontFamily:"Courier New",fontSize:20,fill:"#0f0"});var ourGame=this.scene.get("game");ourGame.events.on("scoreChange",function(value){this.scoreText.setText("Score: "+value),this.gameText.setText("Game Progress: "+(value/95e3*100).toFixed(2)+"%")},this),ourGame.events.on("ammoChange",function(value){this.ammoText.setText("Ammo: "+(value=value<=0?"Unlimited":value))},this),ourGame.events.on("livesChange",function(value){this.livesText.setText("Lives: "+value),value<=0&&(this.scene.sendToBack("ui"),this.scene.restart(),this.scene.sleep("ui"))},this)}}class TitleScreen extends Phaser.Scene{constructor(config){super(config)}preload(){this.load.image({key:"TitleScreen",url:"data/gfx/backgroundLab.jpg"}),this.load.image({key:"Logo",url:"data/gfx/logo23.png"}),this.load.image({key:"PlayButton",url:"data/gfx/PlayButton.svg"}),this.load.image({key:"CreditsButton",url:"data/gfx/CreditsButton.svg"}),this.load.image({key:"MoveKeys",url:"data/gfx/WASDkeysHelp.svg"})}create(data){var w=this.sys.canvas.width,h=this.sys.canvas.height;this.ts=this.add.image(0,0,"TitleScreen").setOrigin(0,0).setDisplaySize(w,h),this.logo=this.add.image(w/2,h/6,"Logo").setOrigin(.5,.5),this.logo.setScale(Math.min(w/this.logo.displayWidth,h/this.logo.displayHeight)/1.5),this.sys.game.device.os.desktop&&(this.help=this.add.image(w,0,"MoveKeys").setOrigin(1,0)),this.pb=this.add.ImgButton(w/2,h/2,"PlayButton",()=>this.play()).setOrigin(.5,.5),this.cb=this.add.ImgButton(w/2,h/2+1.5*this.pb.displayHeight,"CreditsButton",()=>this.scene.switch("credits")).setOrigin(.5,.5)}play(){this.scene.switch("game")}}class Credits extends Phaser.Scene{constructor(config){super("credits")}preload(){this.load.image({key:"CreditsBG",url:"data/gfx/CreditsScreen.png"}),this.load.image({key:"mainmenubtn",url:"data/gfx/MainMenuButton.svg"})}create(){var w=this.sys.canvas.width,h=this.sys.canvas.height;this.cs=this.add.image(0,0,"CreditsBG").setOrigin(0,0).setDisplaySize(w,h),this.mb=this.add.ImgButton(w/2,h/2.5,"mainmenubtn",()=>this.scene.switch("default")).setOrigin(.55,.55),this.mb.setScale(Math.min(w/this.mb.displayWidth,h/this.mb.displayHeight)/4)}}const myCustomCanvas=document.createElement("canvas");document.body.appendChild(myCustomCanvas);const myCustomContext=myCustomCanvas.getContext("webgl");myCustomContext.getExtension("OES_standard_derivatives");const gameConfig={type:Phaser.WEBGL,canvas:myCustomCanvas,context:myCustomContext,maxLights:11,width:clientWidth,height:clientHeight,roundPixels:!0,mode:Phaser.Scale.FIT,physics:{default:"arcade",arcade:{gravity:{y:0},debug:!0,debugShowBody:!1,debugShowVelocity:!0}},scene:[TitleScreen,Credits,Game,UserInterface,GameOver]};var game=new Phaser.Game(gameConfig);function isMobile(){try{return document.createEvent("TouchEvent"),!0}catch(e){return!1}}function resize(){var canvas=document.querySelector("canvas"),windowWidth=window.innerWidth,windowHeight=window.innerHeight,gameRatio=game.config.width/game.config.height;windowWidth/windowHeight<gameRatio?(canvas.style.width=windowWidth+"px",canvas.style.height=windowWidth/gameRatio+"px"):(canvas.style.width=windowHeight*gameRatio+"px",canvas.style.height=windowHeight+"px")}window.addEventListener("resize",resize,!1),window.addEventListener("orientationchange",function(){alert("Refresh Page!")},!1);
